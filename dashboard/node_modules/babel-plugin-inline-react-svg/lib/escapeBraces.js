"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = escapeBraces;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* If the SVG has text that has curly braces, or
if there is a <style> element (which will, of
course, have curly braces) then we need to
escape those for JSX parsing. */
function escapeBraces(raw) {
  // converts
  // <style> .class1 {} .class2{}</style>
  // to
  // <style> .class1 {`{`}{`}`} .class2{`{`}{`}`}</style>
  return _objectSpread(_objectSpread({}, raw), {}, {
    data: raw.data.replace(/(\{|\})/g, '{`$1`}')
  });
}